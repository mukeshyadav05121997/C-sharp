An exception is a problem that arises during the execution of a program. 
A C# exception is a response to an exceptional circumstance that arises while a program is running, such as an attempt to divide by zero.
Exceptions provide a way to transfer control from one part of a program to another.
C# exception handling is built upon four keywords: try, catch, finally, and throw.

**try − A try block identifies a block of code for which particular exceptions is activated. 
It is followed by one or more catch blocks.

**catch − A program catches an exception with an exception handler at the place in a program where you want to handle the problem. 
The catch keyword indicates the catching of an exception.

**finally − The finally block is used to execute a given set of statements, whether an exception is thrown or not thrown. 
For example, if you open a file, it must be closed whether an exception is raised or not.

**throw − A program throws an exception when a problem shows up. This is done using a throw keyword.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exception_Handling
{

  public  class DivNumber
    {
        int Result;
      public  DivNumber()
        {
            Result = 0;
        }
        public void Division(int i1,int i2)
        {
            try
            {
                Result = i1 / i2;
            }
            catch(DivideByZeroException e)
            {
                Console.WriteLine("Exception Caught {0}", e);
            }
            finally
            {
                Console.WriteLine("The result is {0}", Result);
            }
        }

    }
    class Program
    {
        static void Main(string[] args)
        {
            DivNumber D1 = new DivNumber();
            D1.Division(100, 0);
            Console.ReadKey();
        }
    }
}

==============================================================================================================================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace exception
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] arr = { 1,2,3,4,5,6};
         for(int i=0;i<arr.Length;i++)
            {
                Console.WriteLine("The value is {0}", arr[i]);
            }
            try
            {
                Console.WriteLine(arr[7]);
            }
            catch(IndexOutOfRangeException e)
            {
                Console.WriteLine("An Exception has occured", e.Message);
            }
        }
    }
}



=============================================================================================================================================================================
--------------------------------USER DEFINED EXCEPTION-----------------------------------------------------------------------------------------------------------------------

