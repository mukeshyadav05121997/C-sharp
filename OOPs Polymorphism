This allows us to perform a single action in different ways.
There are two types of polymorphism in C#:
Static / Compile Time Polymorphism.
Dynamic / Runtime Polymorphism



*********Static/compile Polymorphism***************
Its of two type
1.Method Overloading:
It is also known as Early Binding. Method overloading is an example of Static Polymorphism.
In overloading, the method / function has a same name but different signatures. 
It is also known as Compile Time Polymorphism because the decision of which method is to be called is made at compile time.
Overloading is the concept in which method names are the same with a different set of parameters
public class TestData  
{  
    public int Add(int a, int b, int c)  
    {  
        return a + b + c;  
    }  
    public int Add(int a, int b)  
    {  
        return a + b(+);  
    }  
}  
class Program  
{  
    static void Main(string[] args)  
    {  
        TestData dataClass = new TestData();  
        int add2 = dataClass.Add(45, 34, 67);  
        int add1 = dataClass.Add(23, 34);  
    }  
} 


2.Operator Overloading




--------------------------------------------------------------------------------------------------------------------------------------
**Dynamic polymorphism


